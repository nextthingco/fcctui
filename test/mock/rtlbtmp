#!/bin/bash

PROMPT="> "

BANNER=$(cat << EOF
:::::::::::::::::::::::::::::::::::::::::::::::::
:::::::: Bluetooth MP Test Tool Starting ::::::::
EOF
)

echo -e "${BANNER}"
sleep 1
echo -n "${PROMPT}"

cmd_enable() {
	if [ $# -ne 1 ]; then
		echo "command takes one arg only"
		return 1
	fi

	IFS=':' read -r -a uart <<< $1

	if [ ${#uart[@]} -ne 2 ]; then
		echo "could not find DEVNAME"
		return 1
	fi

	for i in $(seq 6); do
		echo -n "${PROMPT}"
		sleep 1
	done

	if [ "${uart[1]}" = "/dev/ttyS2" ]; then
		return 0
	else
		return 1
	fi
}

cmd_disable() {
	return 0
}

cmd_bt_mp_Exec() {
	if [ $# -ne 1 ]; then
		echo "command takes one arg only"
		return 1
	fi

	echo "running bt_mp_Exec: $1"
	return 0
}

cmd_bt_mp_SetParam() {
	echo "running bt_mp_SetParam: $@"
	return 0
}

cmd_bt_mp_Report() {
	if [ $# -ne 1 ]; then
		echo "command takes one arg only"
		return 1
	fi

	case $1 in
		17)
			echo "bt_mp_Report,17,0x00,40,1,2,3,4"
			;;
		*)
			echo "running bt_mp_Report: $1"
			;;
	esac

	return 0

	# Example report output
	# bt_mp_Report 14
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,14,0x00,0x00000000,0x00000000
	# bt_mp_Report 13
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,13,0x00,0x00000000,0x00000000
	# bt_mp_Report 12
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,12,0x00,0x00000000,0x00000000
	# bt_mp_Report 2
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,2,0x00,0x00000000,0x00000000
	# bt_mp_Report 15
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,15,0x00,160,0x00000000,0x00000000,0x00000000
	# bt_mp_Report 17
	# bt_mp_Report[Success:0]
	# > bt_mp_Report,17,0x00,40,12,12,12,32

}

cmd_bt_mp_True() {
	return 0
}

cmd_bt_mp_False() {
	return 1
}

cmd_quit() {
	exit 0
}

cmd_help() {
	cat <<- EOF
	help for available commands:

	enable         - enable MP Radio test
	    uart:DEVNAME
	disable        - disable MP Radio test
	bt_mp_Exec     - Execute a firmware command
	bt_mp_SetParam - Configure firmware parameter command
	bt_mp_Report   - Query firmware states command
	bt_mp_True     - Return Failure (used for testing)
	bt_mp_False    - Return Failure (used for testing)
	help           - Print this help message
	quit           - quit MP Radio test tool
	EOF
}

while read -e -a line; do
	if [ -n "${line}" ]; then
		if [ "$(type -t "cmd_${line[0]}")" = "function" ]; then
			cmd="${line[0]}"
			line[0]="cmd_${line[0]}"
			if ${line[@]}; then
				echo "${cmd}[Success]"
			else
				echo "${cmd}[Failed]"
			fi
		else
			echo "Invalid command"
			cmd_help
		fi
	fi
	echo -n "${PROMPT}"
done
